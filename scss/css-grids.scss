/*!
 * css-Grids v1.0 (https://github.com/happy2deepak/css-grids)
 * Copyright (c) 2017 Deepak Yadav. (http://www.deepaky.com)
 * Licensed under MIT (https://github.com/happy2deepak/css-grids/blob/master/LICENSE)
 */


* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

// default values
$prefix: col !default;
$columns : 12 !default;
$gutter: 15px !default;

// breakpoints
$screen-sm: 768px !default; // 768 to 991
$screen-md: 992px !default; // 992 to 1199
$screen-lg: 1200px !default; // 1200 to E

.container {
  width: 100%;
  padding-left: $gutter;
  padding-right: $gutter;
  margin-left: auto;
  margin-right: auto;

  @media (min-width: 768px) {
    max-width: 750px;
  }

  @media (min-width: 992x) {
    max-width: 970px;
  }

  @media (min-width: 1200px) {
    max-width: 1170px;
  }

}

.row {
  margin-left: floor($gutter * (-1));
  margin-right: floor($gutter * (-1));
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

@mixin make-grids($breakpoint) {
  [class^="#{$prefix}-#{$breakpoint}-"] {
    float: left;
    position: relative;
    min-height: 1px;
    padding-left: $gutter;
    padding-right: $gutter;
  }

  @for $i from 1 through $columns {
    .#{$prefix}-#{$breakpoint}-#{$i} {
      width: (100% / $columns)*$i ;
    }
  }

  @for $i from 1 through $columns {
    .#{$prefix}-#{$breakpoint}-offset-#{$i} {
      margin-left: (100% / $columns)*$i;
    }
  }

  @for $i from 0 through $columns {
    .#{$prefix}-push-#{$breakpoint}-#{$i} {
      left: (100% / $columns)*$i;
    }
  }

  @for $i from 0 through $columns {
    .#{$prefix}-pull-#{$breakpoint}-#{$i} {
      left: -(100% / $columns)*$i;
    }
  }
}


// creating grids by calling the mixin

@include make-grids(xs);

@media (min-width: $screen-sm) {
  @include make-grids(sm);
}

@media (min-width: $screen-md) {
  @include make-grids(md);
}

@media (min-width: $screen-lg) {
  @include make-grids(lg);
}
